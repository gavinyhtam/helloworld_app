	<%= render("layouts/todos") %>
	<script type="text/javascript">
		 $(window).load(function(){
			<% if @new_user %>
		     $('#introModal').modal('show');
			<% end %>
		 });
	</script>
	<div class="modal fade" id="introModal">
		 <div class="jumbotron">
			  <h1>Hello, <%= @user.first_name %>!</h1>
			  <p>Review your experiences on the TravelDex!</p>
			  <p><button class="btn btn-primary btn-lg" data-toggle="modal" data-target="#howTo">
				  How to
				</button></p>

				<div id="got-it">
				<button type="button" class="btn btn-default" data-dismiss="modal">Got it!</button>
				</div>
		</div>
	</div><!-- /.modal -->

		<!--Modal for How to Button-->
		<div class="modal fade" id="howTo">
		  <div class="modal-dialog modal-md">
		    <div class="modal-content">
		      <div class="modal-header">
		        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
		        <h4 class="modal-title">
		        	How to use TravelDex
		        </h4>
		      </div>
		      <div class="modal-body">
		      	<p> Simply click on a country to view photos of you and your friend's travel experiences!</p>
		      </div>
		      <div class="modal-footer">
		        <button type="button" class="btn btn-primary" data-dismiss="modal">Got it!</button>
		      </div>
		    </div><!-- /.modal-content -->
		  </div><!-- /.modal-dialog -->
		</div><!-- /.modal -->

		<!--Modal for photo browser-->
		<div class="modal fade" id="myModal">
		  <div class="modal-dialog modal-lg">
		    <div class="modal-content">
		      <div class="modal-header">
		        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
		        <h4 class="modal-title" id="timeline-title">
		        	View your experiences
		        	<span class="glyphicon glyphicon-camera"></span>
		        </h4>
		      </div>
		      <div class="modal-body">
		      	<p> Click on any picture to view or comment.</p>
					<div id="filters"></div>
					<!--div id="myFBImage"></div-->
					<div id="timeline-anchor">
					<div id="my-timeline"></div>
					</div>
		      </div>
		      <div class="modal-footer">
		        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
		      </div>
		    </div><!-- /.modal-content -->
		  </div><!-- /.modal-dialog -->
		</div><!-- /.modal -->
		<div id="menu">
			<div class="menu-item" id="help-icon"><span class="glyphicon glyphicon-question-sign menu-icon"></span><strong>HELP</strong></div>
			<div class="menu-item" id="upload-icon"><span class="glyphicon glyphicon-upload menu-icon"></span><strong>UPLOAD</strong></div>
		</div>
		<!--Display AmMaps javascript-->
		<div id="map">
			<!-- ************** Country Selector. All credits go to http://brianreavis.github.io/selectize.js/ ************** -->
			<section class="search-box">
				<div id="search-country" class="sandbox">
					<label><span class="glyphicon glyphicon-search" id="search-icon"></span></label>
					<select class="select-countries" id="select-country" class="demo-default" placeholder="Select a country...">
					<%= render :partial => "layouts/selectize" %>
					</select>
				</div>
				<script>
				$("#select-country").selectize();
				//when user selects a country
				$("#select-country").change(function() {
					var c = document.getElementById("select-country");
					var countryID = c.options[c.selectedIndex].value;
					map.selectObject(map.getObjectById(countryID));
					updateCountryInfo(country(countryID));
				});
				</script>
			</section>
			<div id="mapdiv"></div>
			<div id="country-info">
				<div id="country-flag"></div>
				<div id="country-description"></div>
			</div>
		</div>

	<script>
		$("#help-icon").on('click',function() {
			$("#howTo").modal("show");
		});
	</script>

<!--**********************************TIMELINE*****************************-->
	<script type="text/javascript" src="http://cdn.knightlab.com/libs/timeline/latest/js/storyjs-embed.js"></script>
	<script>
	//Source for FB SDK Loaded from http://stackoverflow.com/questions/7747668/fb-is-undefined-even-though-i-just-used-it
		var refreshed = true;
		(function($) {
			$(document).bind("FBSDKLoaded", function() {
				FB.getLoginStatus(function(response) {
					if (response.status === "connected") {
						if (refreshed) {
							getFBPhotos();
							getPhotos();
							$('#myModal').on('shown.bs.modal', function () {
								$("#my-timeline").remove();	//destroy old timeline and prepare to get new photos
	  							getPhotos();		//get photos once modal is on
								//setTimeout(function() {addImageView();},3000); //HACK FOR NOW--Lazy loading causing image divs to not be created yet so wait 3 seconds
								$(".media-shadow").waitUntilExists(function() {
									addImageView();
								});
							});
							refreshed = false;
						}
					}
				});
			});
		})(jQuery);

		(function ($) {
		/**
		* @function
		* @property {object} jQuery plugin which runs handler function once specified element is inserted into the DOM
		* @param {function} handler A function to execute at the time when the element is inserted
		* @param {bool} shouldRunHandlerOnce Optional: if true, handler is unbound after its first invocation
		* @example $(selector).waitUntilExists(function);
		*/
		$.fn.waitUntilExists    = function (handler, shouldRunHandlerOnce, isChild) {
			 var found       = 'found';
			 var $this       = $(this.selector);
			 var $elements   = $this.not(function () { return $(this).data(found); }).each(handler).data(found, true);

			 if (!isChild) {
				  (window.waitUntilExists_Intervals = window.waitUntilExists_Intervals || {})[this.selector] =
				      window.setInterval(function () { $this.waitUntilExists(handler, shouldRunHandlerOnce, true); }, 500);
			 } else if (shouldRunHandlerOnce && $elements.length) {
				  window.clearInterval(window.waitUntilExists_Intervals[this.selector]);
			 }
			 return $this;
		}
		}(jQuery));

		//ask FB to get photos from user's account
		function getFBPhotos() {
			FB.api("/me/photos/uploaded",
				function(response) {
					console.log(response);
					console.log(response.data);
					for (var i = 0; i < response.data.length; i++) {
						console.log(response.data[i]);
						if (response.data[i].place === undefined || response.data[i].name === undefined) {
							continue;	//if no location or photo name specified
						}
						var date = response.data[i].created_time; //default date is created time unless user has date attached
						if (response.data[i].backdated_time !== undefined) {
							date = response.data[i].backdated_time;	//update date to user described date
						}
						var dbPhotoJson = {
							link: response.data[i].source,
							date: date,
							location_name: response.data[i].place.name,
							photo_name: response.data[i].name,
							photo_id: response.data[i].id
						}
						addPhoto(dbPhotoJson);
					}
			});
		}
		
		//get photos from DB
		function getPhotos() {
			$(document).ready(function() {
				var photos = { 
					timeline: {
						headline: currLocation + " trip",
						type: "default",
						text: "<p>Album</p>",
						date: [],
						era: [],
					}
				};

				var isEmpty = true;
				<% @all_friends.each do |friend| %>
					<% friend.photos.each do |photo| %>
						if ("<%= photo.location_name %>" === currLocation) {
							isEmpty = false;
							var data = {
								startDate: parseDate("<%= photo.date %>"),
								endDate: parseDate("<%= photo.date %>"),
								headline: "<%= photo.photo_name %>",
								text: "<%= photo.location_name %><p>Taken by <%= User.find_by(id: photo.user_id).first_name %> " + 
										"<%= User.find_by(id: photo.user_id).last_name %></p>" +
										'<img src="<%= friend.profile_pic_link %>">',
								asset: {
									media: "<%= photo.link %>"
								}
							};
							photos["timeline"]["date"].push(data);
							photos["timeline"]["era"].push(data);
							photos["timeline"]["asset"] = { media: "<%= photo.link %>" }
					}
					<% end %>
				<% end %>
				console.log(photos);
				createTimeline(photos,isEmpty);
			});
		}

		function getFriendPhotos(friendPhotos,user) {
			$(document).ready(function() {
				var photos = { 
					timeline: {
						headline: currLocation + " trip",
						type: "default",
						text: "<p>Album</p>",
						date: [],
						era: [],
					}
				};

				var isEmpty = true;
				for (var i = 0; i < friendPhotos.length; i++) {
					if (friendPhotos[i].location_name === currLocation) {
						isEmpty = false;
						var data = {
							startDate: parseDate(friendPhotos[i].date),
							endDate: parseDate(friendPhotos[i].date),
							headline: friendPhotos[i].photo_name,
							text: friendPhotos[i].location_name + "<p>Taken by " + user.first_name + " " + 
									user.last_name + "</p>" +
									'<img src="' + user.profile_pic_link + '">',
							asset: {
								media: friendPhotos[i].link
							}
						};
						photos["timeline"]["date"].push(data);
						photos["timeline"]["era"].push(data);
						photos["timeline"]["asset"] = { media: friendPhotos[i].link }
					}
				}
				console.log(photos);
				createTimeline(photos,isEmpty);
			});
		}

		var newCountrySelected = true;
		var timelineJS;
		function createTimeline(photos,isEmpty) {
			//remake destroyed div to place timeline in
			$("#timeline-anchor").append("<div id=my-timeline></div>");

			if (isEmpty) {	//if no photos are present for that country
				document.getElementById("filters").innerHTML = "";
				var timeline = document.getElementById("my-timeline");
				var newDiv = document.createElement('div');
				newDiv.id = "timeline-default";
				newDiv.innerHTML = '<h3>No photos found!</h3><span class="glyphicon glyphicon-upload" onclick="showUpload()"></span><h1>Upload a photo now</h1>';
				timeline.appendChild(newDiv);
			} else {
				 //create the TimelineJS
				//width is inherited from parent div to ensure responsiveness
				createStoryJS({
					  type:       'timeline',
					  height:     '600',
					  source:     photos,
					  embed_id:   'my-timeline'
				 });
				if (newCountrySelected) {	//remake filters only when new country selected
					var filters = document.getElementById("filters");
					//make filter
					var HTML = 	'<select id="filter-friends" class="demo-default" placeholder="Search for a friend...">'+
													'<option value="all">All</option>';
					for (var i = 0; i < peopleVisited.length; i++) {
						HTML += '<option value=' + peopleVisited[i].fb_id + '>' + 
													peopleVisited[i].first_name + " " + peopleVisited[i].last_name
													+ "</option>";
					}
					HTML += "</select>";
					filters.innerHTML = HTML;
					$("#filter-friends").selectize();	
					//if filter value is selected, filter photos accordingly
					$("#filter-friends").change(function() {
						var filter = document.getElementById("filter-friends");
						var friend = filter.options[filter.selectedIndex].value;
						if (friend === "all") {
							$("#my-timeline").remove();
							getPhotos();
						} else {
							$.ajax({
								type: "POST",
								dataType: "json",
								contentType: "application/json",
								url: "friendPhotos",
								headers: {
								  'X-Transaction': 'POST Example',
								  'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
								},
								data: JSON.stringify({ id: friend, location: currLocation }),
								success: function(response) {
									$("#my-timeline").remove();
									getFriendPhotos(response.msg, response.user);
								}
							});
						}
					});	
					newCountrySelected = false;
				}
			}
			if (countryFlagLink) {	//if country flag link is defined
				document.getElementById("timeline-title").innerHTML = '<img src="' +
						countryFlagLink + '" class="timeline-flag">' + currLocation +
						'<a id="travel-guide-link" href="http://www.lonelyplanet.com/search?q=' + 
						currLocation.replace(/ /g, "+") + '" target="_blank">' +
						'<span class="glyphicon glyphicon-share-alt img-horizontal"></span>' +
						'<img class="lonely-planet-link img-horizontal" src="<%= asset_path "lonelyplanet.png" %>"></a>';
			} else {
				document.getElementById("timeline-title").innerHTML = 'View your experiences<span class="glyphicon glyphicon-camera"></span>';
			}
		}

		function showUpload() {
			$("#upload").modal("show");
		}

		function addImageView() {
			var images = document.getElementsByClassName("media-shadow")
			for (var i = 0; i < images.length; i++) {
				console.log(images[i].firstChild.src);
				(function(i) {
				images[i].firstChild.onclick = function() { showEnlargedImg(this.src); }
				})(i);
			}
		}

		function showEnlargedImg(src) {
			var modal = document.getElementById("enlargedImageBody");
			while (modal.firstChild) modal.removeChild(modal.firstChild);
			var image = document.createElement("img");
			image.setAttribute("src",src);
			image.setAttribute("class", "bigImage");
			$(modal).html(image);
			console.log(modal);
			$("#enlargedImage").modal('show');
			//modal.innerHTML += "<img src=http://www.ens.ro/wp-content/uploads/2012/03/fb_like_comment_box.png>";
			//modal.innerHTML += '<div class="fb-comments" data-href="http://localhost:3000/todos/index" data-numposts="5" data-colorscheme="light"></div>'
			/*var photoID = getPhotoID(src);
			FB.api('/'+photoID+'/comments', function(response) {
				if (response && !response.error) {
					var comments = response.data;
					var commentsDiv = document.createElement("div");
					commentsDiv.setAttribute("id","commentsDiv");
					for (var i = 0; i < comments.length; i++) {
						commentsDiv.innerHTML += "<strong>" + comments[i]["from"]["name"] + "</strong>" + comments[i]["message"] + "<hr>";
					}
					modal.appendChild(commentsDiv);
				}
			});*/
			$("#enlargedImage").on('click',function() {
				$("#enlargedImage").modal('hide');
			});
		}

		function getPhotoID(src) {
			return src.match(/[0-9]+_([0-9]+)/)[1];
		}
		
		//Returns JSON version of the photo date extracted from FB API
		function initPhoto(photoData) {
			var date = photoData.created_time; //default date is created time unless user has date attached
			if (photoData.backdated_time !== undefined) {
				date = photoData.backdated_time;	//update date to user described date
			}
			//JSON data for the timeline
			var jsonPhotoData = {
				startDate: parseDate(date),
				endDate: parseDate(date),
				headline: photoData.name,
				text: photoData.place.name,
				asset: {
					media: photoData.source
				} 
			};
			//create JSON for DB
			//give date as ISO8601 format instead
			var dbPhotoJson = {
				link: photoData.source,
				date: date,
				location_name: photoData.place.name,
				photo_name: photoData.name
			}
			addPhoto(dbPhotoJson);
			return jsonPhotoData;
		}

		//adds a photo to the database
		//right now, it lets the validation of the Photo record reject duplicate records
		//we may want to check for ourselves first?
		function addPhoto(dbPhotoJson) {
			//post JSON to DB to store
			$.ajax({
				type: "POST",
				url: "createPhoto",
				dataType: "json",
				contentType: "application/json",
				headers: {
				  'X-Transaction': 'POST Example',
				  'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
				},
				data: JSON.stringify(dbPhotoJson),
				success: function(response) {
					console.log(response.msg);
				}
			});
		}
		
		//parses JSON (ISO8601) to TimelineJS Date format
		function parseDate(string) {
			var date = new Date(string);
			return date.getFullYear() + "," + (date.getMonth()+1) + "," + date.getUTCDate();
		}
	</script>

<!--******************************TRAVELDEX MAP*******************************-->
	<script type="text/javascript">
		var map;
		var currLocation;	//currently selected country
		var hoverLocation;	//currently hovered country
		var peopleVisited = [];
		var countryFlagLink;
		//when AmMap to ready to load
		$(document).ready(function() {
			 map = new AmCharts.AmMap(); //make new Map
			 map.pathToImages = "http://www.ammap.com/lib/images/";
			 //map.panEventsEnabled = true; // this line enables pinch-zooming and dragging on touch devices
			 map.balloon.color = "#000000";

			 var worldDataProvider = {
				  mapVar: AmCharts.maps.worldHigh,
				  getAreasFromMap: true,
				  areas: []
			 };

			<% @locations.each do |location| %>
				worldDataProvider.areas.push({ id: "<%= location %>", color: "#4444ff" });
			<% end %>

			 map.dataProvider = worldDataProvider;
			 map.areasSettings = {
				  autoZoom: true,
				  selectedColor: "#5E88D2", //colour when country is selected
					color: "#BFFC65",
					rollOverOutlineThickness: 0.3,
					rollOverOutlineColor: "#B9EE8B",
					rollOverColor: "#618E1C"
			 };

			//map.backgroundColor = "#ABD8F6";
			//map.backgroundAlpha = 0.1;
			 //map.smallMap = new AmCharts.SmallMap();
			 
			 //when country is selected
			 map.addListener("clickMapObject", function (event) {
				selectedFilter = false;
				currLocation = event.mapObject.id;
				//console.log(currLocation);
				$.ajax({
					type: "POST",
					dataType: "json",
					contentType: "application/json",
					url: "create",
					headers: {
					  'X-Transaction': 'POST Example',
					  'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
					},
					data: JSON.stringify({ countryname: currLocation }),
					success: function(response) {
						currLocation = response.msg;
						newCountrySelected = true;	//country selected from map
					}
				});
				console.log(currLocation);
		      jQuery("#myModal").modal({  //show the modal dialog box with the pictures
		          show: true
		      });
			 });

			map.addListener("rollOverMapObject", function(e) {
				hoverLocation = e.mapObject.id;
				//console.log(hoverLocation);
				//get users who have visited the hovered country and the number of people who have visited
				$.ajax({
					type: "POST",
					dataType: "json",
					contentType: "application/json",
					url: "findLocation",
					headers: {
					  'X-Transaction': 'POST Example',
					  'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
					},
					data: JSON.stringify({ location: hoverLocation }),
					success: function(response) {
						hoverLocation = response.country;
						if (response.msg.length > 0) {
							var text = document.getElementById("popover-text");
							if (response.msg.length === 1) {		//if only one friend has visited the place
								text.innerHTML = '<hr class="popover-separator"><p><strong>' + response.msg.length + "</strong> person has visited " + hoverLocation + ".</p>";
							} else {		//otherwise, use pluralised form
								text.innerHTML = '<hr class="popover-separator"><p><strong>' + response.msg.length + "</strong> people have visited " + hoverLocation + ".</p>";
							}
							var picElement = document.getElementById("visited");
							while (picElement.firstChild) picElement.removeChild(picElement.firstChild);
							//create div for portfolio column
							peopleVisited = [];	//clear people visited for newly hovered country
							for (var i = 0; i < response.msg.length; i++) {
								peopleVisited.push(response.profiles[i]);
								picElement.innerHTML +=  '<img class=img-horizontal src='+
								response.profiles[i].profile_pic_link +'>';
							}
						}
						updateCountryInfo(hoverLocation);
					}
				});
				if (e.mapObject.color == "#4444ff") {
					var mousePos = { x: -1, y: -1};
					mousePos.x = e.event.pageX;
		    		mousePos.y = e.event.pageY;
					 var theHeight = $('.popover').height();
					 $('.popover').show();
					 $('.popover').css('left', (mousePos.x+10) + 'px');
					 $('.popover').css('top', (mousePos.y-(theHeight/2)-10) + 'px');
				}
			});

			map.addListener("rollOutMapObject", function(event) {
				console.log("inside");
				hoverLocation = undefined;
				 $('.popover').hide();
			});
			map.addListener("positionChanged", function(event) {
				 $('.popover').hide();
			});
			 map.write("mapdiv");
		});

		function updateCountryInfo(location) {
			var page = pageID(location);	//get country FB page ID
			FB.api('/'+page, function(r) {
				if (r.description && r.link) {
					document.getElementById('country-description').innerHTML = r.description.substring(0,140) + "..." + '<a href="' + r.link + '" target="_blank">read more</a>';
				}
			});
			FB.api('/'+page+'/picture', { "type": "normal" }, function(r) {
				if (r.data && r.data.url) {
					document.getElementById('country-flag').innerHTML = '<img src="' + r.data.url + '">';
					countryFlagLink = r.data.url;
				}
			});
		}
	</script>

<!--*************************UPLOAD PHOTOS*******************************-->
<!--Modal for Upload button-->
<div class="modal fade" id="upload">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title">
        	Upload Photos
        </h4>
      </div>
      <div class="modal-body">
			<div class="container col-md-12 row-md-12" id="preview-gallery">
				<!--Content for image upload preview gallery-->
				<div id="placeholder"><h3 class="placeholder-text">No image selected.</h3></div>
        </div>
		</div>
			<div class="col-md-12">
			  <form id="upload-photo-form" target="upload_iframe" method="post" enctype="multipart/form-data">
				 <input id="upload-photo-form-file" name="file[]" size="27" type="file" onchange="javascript:previewImages()" multiple/>
				 <div class="col-md-4"> <h4>Title: </h4><input id="upload-message" type="text" name="message"></div>
				 <div class="col-md-4"> <h4>Date: </h4><input class="datepicker" id="upload-date" type="text" name="backdated_date"></div>
				 <div class="col-md-4"> <h4>Location: </h4><div id="upload-location"><select class="select-countries" id="img-select-country" class="demo-default" placeholder="Select a country...">
						<%= render :partial => "layouts/selectize" %>
						</select></div></div>
			  </form>
				<script>
					$("#img-select-country").selectize();
				</script>
			  <iframe id="upload_iframe" name="upload_iframe" width="0px" height="0px" border="0" style="width:0; height:0; border:none;"></iframe>
			</div>
		<div class="modal-footer">
		  <button type="button" id="upload-trigger" class="btn btn-success" onClick="javascript:fileUpload();">Upload</button>
		  <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<!--Modal for Processing upload-->
<div class="modal fade" id="process-upload">
  <div class="modal-dialog modal-md">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title">
        	Uploading to Facebook!
        </h4>
      </div>
      <div class="modal-body">
      	<p> Please wait while we process your photo uploads.</p>
		<img src="http://www.gifgifgifgifgif.com/img/2.gif">
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script>
	$("#upload-icon").on('click',function() {
		$("#upload").modal("show");
	});
</script>

<!--Modal for Enlarged Image + Comments box-->
	<div class="modal fade" id="enlargedImage">
      <div class="enlargedImageModal">
			<div id="enlargedImageBody"></div>
			<div id="fb-comment-box">
			<div class="fb-comments" data-href="https://www.facebook.com/photo.php?fbid=1458709894389852&set=a.1457888027805372.1073741827.100007525659896&type=3&theater" data-numposts="5" data-colorscheme="light"></div>
			</div>
      </div>
	</div><!-- /.modal -->

<script>
	$(".datepicker").datepicker({
		dateFormat: 'dd-mm-yy'
	});
	function previewImages() {
		var gallery = document.getElementById("preview-gallery");
		while (gallery.firstChild) gallery.removeChild(gallery.firstChild);
		var imageFiles = document.getElementById("upload-photo-form-file");
		if (imageFiles.files.length === 0) {
			gallery.innerHTML += '<div id="placeholder"><h3 class="placeholder-text">No image selected.</h3></div>';
		} else {
			var numRows = Math.ceil(imageFiles.files.length/3);	//find number of rows for images
			for (var i = 0; i < numRows; i++) {		//for each row, create a row div to the gallery
				var rowDiv = document.createElement('div');
				rowDiv.className = 'row';
				rowDiv.id = 'row' + i;
				gallery.appendChild(rowDiv);
			}
			//for each image, insert into appropriate row and column in the gallery
			for (var i = 0; i < imageFiles.files.length; i++) {
				(function(i) {
					var fileReader = new FileReader();
					fileReader.readAsDataURL(imageFiles.files[i]);
					fileReader.onload = function (e) {
						var rowDiv = document.getElementById('row' + Math.floor(i/3));	//get row number of the image
						var newDiv = document.createElement('div');
						newDiv.className = 'col-md-4 row-md-4';
						newDiv.innerHTML += '<div class="img-div">'
						+ '<img class="thumbnail-upload img-responsive" src=' + e.target.result + ' id=img-'+ i + '><span class="remove glyphicon glyphicon-remove"></span>'
						+ '<div class="btn-group">'
						+ '<button type="button" id="description-' + i + '" class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Add description"><span class="glyphicon glyphicon-pencil"></span></button>'
						+ '<button type="button" id="date-' + i + '" class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Select date"><span class="glyphicon glyphicon-calendar"></span></button>'
						+ '<button type="button" id="location-' + i + '" class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Select location"><span class="glyphicon glyphicon-map-marker"></span></button></div>'
						+'<form id="descriptionForm-' + i +'" target="upload_iframe" method="post" enctype="multipart/form-data" style="display:none">' +
							'Title: <input id="upload-message-img' + i + '" type="text"></form>'
						+'<form id="dateForm-' + i +'" target="upload_iframe" method="post" enctype="multipart/form-data" style="display:none">' +
							'Date: <input class="datepicker" id="upload-date-img' + i + '" type="text"></form>'
						+'<form id="locationForm-' + i +'" target="upload_iframe" method="post" enctype="multipart/form-data" style="display:none">' +
							'Location: <div id="upload-location-img' + i + '"><select class="select-countries" id="select-country' + i + 
						'" class="demo-default" placeholder="Select a country...">' +
						'<%= escape_javascript(render :partial => "layouts/selectize") %></select></div></form>' +
						'</div></div>';

						rowDiv.appendChild(newDiv);	//register child div in the DOM
						$(".datepicker").datepicker({
							dateFormat: 'dd-mm-yy'
						});
						$("#select-country"+i).selectize();
						/*$(".remove").on('click',function() {
							$(this)
						});*/

						document.getElementById('description-'+i).onclick = function() { showForm("descriptionForm",i); hideForm("dateForm",i); hideForm("locationForm", i); };
						document.getElementById('date-'+i).onclick = function() { showForm("dateForm",i); hideForm("descriptionForm",i); hideForm("locationForm", i); };
						document.getElementById('location-'+i).onclick = function() { showForm("locationForm",i); hideForm("dateForm",i); hideForm("descriptionForm", i); };
						document.getElementById('img-'+i).onclick = function() { showEnlargedImage('img-' +i) };
					};
				})(i);
			}
		}
	}

	function showEnlargedImage(imgID) {
		var modal = document.getElementById("enlargedImageBody");
		while (modal.firstChild) modal.removeChild(modal.firstChild);
		var src = $("#" + imgID).clone();
		console.log(src);
		console.log(modal);
		$(modal).html(src);
		console.log(modal);
		$("#enlargedImage").modal('show');
		$("#enlargedImage").on('click',function() {
			$("#enlargedImage").modal('hide');
		});
	}

	function showForm(type, i) {
		document.getElementById(type + "-" + i).style.display = "block";
	}

	function hideForm(type, i) {
		document.getElementById(type + "-" + i).style.display = "none";
	}
	
</script>

<!--Sourced from https://gist.github.com/nseo/2910244-->
<script type="application/javascript">
	var accessToken;
	(function($) {
		$(document).bind("FBSDKLoaded", function() {
			FB.getLoginStatus(function(response){
			if (response.status == 'connected') {
			  accessToken = response.authResponse.accessToken;
			}
		  });
		});
	})(jQuery);
	  
	//Upload a local file image
	function fileUpload() {
	  //ask for upload photo permissions
	  FB.login(function(r) {}, {scope: 'publish_actions' });
		var imageFiles = document.getElementById("upload-photo-form-file");
		var description = document.getElementById("upload-message");
		var date = document.getElementById("upload-date");
		var location = document.getElementById("img-select-country");
		console.log(location);
		for (var i = 0; i < imageFiles.files.length; i++) {
			if (document.getElementById("upload-message-img" + i)) {
				description = document.getElementById("upload-message-img" + i);
			}
			if (document.getElementById("upload-date-img" + i)) {
				date = document.getElementById("upload-date-img" + i);
			}
			if (document.getElementById("select-country" + i)) {
				location = document.getElementById("select-country" + i);
				console.log(location);
			}
			$("#process-upload").modal("show");
			var f = new FormData();	//create upload photo formdata
			f.append("source", imageFiles.files[i]);
			f.append("message", description.value);
			f.append("backdated_time", date.value);
			//get FB page ID of the selected country
			f.append("place", pageID(country(location.options[location.selectedIndex].value)));

			(function() {
            var fCopy = f;
				FB.api('/me/albums', function(response) {
					var album = response.data[0]; // Now, upload the image to first found album for easiness.
		          $.ajax({
		              url: 'https://graph.facebook.com/' + album.id + '/photos?access_token=' +  accessToken,
		              type: "POST",
		              data: fCopy,
		              processData: false,
		              contentType: false,
		              cache: false,
		              success: function (data) {
		                  console.log("success " + data);
		              },
		              error: function (shr, status, data) {
		                  console.log("error " + data + " Status " + shr.status);
		              },
		              complete: function () {
		                  console.log("Posted to facebook");
								$("#process-upload").hide();
								window.location = "/todos/index";
		              }
		          });
				});
			})();
		}
	}
</script>


<!--Popover showing the friends who have visited the country-->
<div class="popover" id="popover">
	<div id="visited"></div>
	<div id="popover-text"></div>
</div>

<script>
	//hide popovers when user clicks
	$(document).on('click', function(e) {
		$(".popover").hide();
	});
</script>

<!--Tooltip-->
<script type="text/javascript">
	$("body").tooltip({ selector: '[data-toggle="tooltip"]' });
</script>
